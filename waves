Pole pol[];

void setup() {
  size(1200, 600);
  
  pol = new Pole[25];
  
  float posX = 0;
  float dorimeWidth = width / pol.length;
  for (int i = 0; i < pol.length; i++, posX += dorimeWidth)
    pol[i] = new Pole(posX, height / 2, 25, 8);
}

void draw() {
  background(0);
  
  for (Pole p : pol) {
    p.show();
    p.update();
    
    if (p.posX > width)
      p.posX = 0;
  }
}

//#############################class################################
class Pole {
  float posX;
  float maxAmp, minAmp;
  float radius;
  float magic;
  float delT;
  
  Pole(float posX, float maxAmp, float minAmp, float radius) {
    this.posX = posX;
    this.maxAmp = maxAmp;
    this.minAmp = minAmp;
    this.radius = radius;
    
    magic = 13;
    delT = .45;
  }
  
  void show() {
    noStroke();
    colorMode(HSB);
    fill(map(posX, 0, width, 0, 255), 255, 255);
    
    float dorimeHeight = minAmp + maxAmp * abs(sin(posX / magic));
    rect(posX, .5 * (height - dorimeHeight), radius * 2, dorimeHeight);
    ellipse(posX + radius, .5 * (height - dorimeHeight), radius * 2, radius * 2);
    ellipse(posX + radius, .5 * (height + dorimeHeight), radius * 2, radius * 2);
  }
  
  void update() {
    posX += delT;
  }
};
//#############################class################################
